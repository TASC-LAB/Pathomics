#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    Aug 03, 2024 12:39:19 AM +0300  platform: Windows NT

# Standard library modules.
import os
import sys
import tkinter as tk
import tkinter.font
import tkinter.filedialog
import tkinter.ttk as ttk
from tkinter.constants import *

# Third party modules.
import PIL
import seaborn
from PIL import Image, ImageTk

##############################
# SETUP                      #
##############################
seaborn.set()
def _style_code():
    style = ttk.Style()
    style.theme_use('default')
    style.configure('.', font = "TkDefaultFont")
    if sys.platform == "win32":
       style.theme_use('winnative')

##############################
# Class                      #
##############################
class PathomicsGUI:
    def __init__(self, top, config, assets=""):
        top.geometry("785x615+264+139")
        top.minsize(120, 1)
        top.maxsize(1684, 1031)
        top.resizable(0,  0)
        top.title("Pathomics 4")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="#000000")


        # Configuration default values.
        # Variable declaration and default values.
        self.top    = top
        self.config = config
        self.assets = os.path.abspath(assets)
        self.config.set("DEFAULT", "input_file_types",  ','.join(["tiff", "svs", "scn", "png", "jpg"]))
        self.config.set("DEFAULT", "output_file_types", ','.join(["tiff", "svs", "scn", "png", "jpg"]))
        self.config.set("DEFAULT", "channels",          ','.join(["grayscale", "grayscale+alpha", "rgb", "rgba"]))
        self.config.set("DEFAULT", "assets_path",       self.assets)

        self.config.add_section("GUI")
        self.config.set("GUI", "btnLocal_state",          "normal")
        self.config.set("GUI", "btnMongo_state",          "disabled")
        self.config.set("GUI", "btnCloud_state",          "disabled")
        self.config.set("GUI", "txtWidth_state",          "disabled")
        self.config.set("GUI", "txtHeight_state",         "disabled")
        self.config.set("GUI", "cmbChannels_state",       "disabled")
        self.config.set("GUI", "btnROITrainModel_state",  "disabled")
        self.config.set("GUI", "btnROILoadModel_state",   "disabled")
        self.config.set("GUI", "btnROIFilter_state",      "disabled")
        self.config.set("GUI", "btnNormTrainModel_state", "disabled")
        self.config.set("GUI", "btnNormLoadModel_state",  "disabled")
        self.config.set("GUI", "btnNormalize_state",      "disabled")
        self.config.set("GUI", "btnQuPathParams_state",   "disabled")
        self.config.set("GUI", "btnQuPathAnalysis_state", "disabled")
        self.config.set("GUI", "btnTrainPathomics_state", "disabled")
        self.config.set("GUI", "cbKaplanMeier_state",     "disabled")
        self.config.set("GUI", "cbQTL_state",             "disabled")
        self.config.set("GUI", "btnIntensity_state",      "disabled")
        self.config.set("GUI", "btnPCA_state",            "disabled")
        self.config.set("GUI", "btnKMeans_state",         "disabled")
        self.config.set("GUI", "btnCOX_state",            "disabled")
        self.config.set("GUI", "btnFeatures_state",       "disabled")
        self.config.set("GUI", "btnAnova_state",          "disabled")
        self.config.set("GUI", "btnKaplanMeier_state",    "disabled")
        self.config.set("GUI", "btnQTL_state",            "disabled")
        self.config.set("GUI", "btnGenerate_state",       "disabled")

        # Paths.
        self.dataset_path   = tk.StringVar(top, "No dataset selected.")
        self.processed_path = tk.StringVar(top, "No dataset selected.")
        self.results_path   = tk.StringVar(top, "No results path.")

        # Image properties.
        self.input_file_type   = tk.StringVar(top, "tiff")
        self.output_file_type  = tk.StringVar(top, "tiff")
        self.patch_channels    = tk.StringVar(top, "rgb")
        self.patch_width       = tk.StringVar(top, 256)
        self.patch_height      = tk.StringVar(top, 256)

        # ROI preprocess.
        self.roi_algo_name = tk.StringVar(top, "Hard Coded Filter.")
        self.roi_status    = tk.StringVar(top, "Ready for Filtering.")
        self.roi_progress  = tk.IntVar(top, 0)

        # Normalization.
        self.norm_algo_name = tk.StringVar(top, "Histogram.")
        self.norm_status    = tk.StringVar(top, "Ready for Normalization.")
        self.norm_progress  = tk.IntVar(top, 0)

        # QuPath.
        self.qupath_status   = tk.StringVar(top, "Ready for Labeling.")
        self.qupath_progress = tk.IntVar(top, 0)

        # Pathomics.
        self.pathomics_status   = tk.StringVar(top, "No dataset loaded.")
        self.pathomics_progress = tk.IntVar(top, 0)

        # Results.
        self.kaplan_meier = tk.IntVar(top, 1)
        self.qtl          = tk.IntVar(top, 1)

        _style_code()
        self.imgLogo = tk.Label(self.top)
        self.imgLogo.place(relx=0.006, rely=0.008, height=256, width=256)
        self.imgLogo.configure(activebackground="#d9d9d9")
        self.imgLogo.configure(activeforeground="black")
        self.imgLogo.configure(anchor='w')
        self.imgLogo.configure(background="#d9d9d9")
        self.imgLogo.configure(compound='left')
        self.imgLogo.configure(disabledforeground="#a3a3a3")
        self.imgLogo.configure(font="-family {Segoe UI} -size 9")
        self.imgLogo.configure(foreground="#000000")
        self.imgLogo.configure(highlightbackground="#d9d9d9")
        self.imgLogo.configure(highlightcolor="#000000")
        self._img0 = ImageTk.PhotoImage(file=os.path.join(self.assets, "SmallLogo.jpg"))
        self.imgLogo.configure(image=self._img0)
        self.imgLogo.configure(padx="0")
        self.imgLogo.configure(pady="0")

        self.frmInputs = tk.LabelFrame(self.top)
        self.frmInputs.place(relx=0.013, rely=0.423, relheight=0.569, relwidth=0.326)
        self.frmInputs.configure(relief='groove')
        self.frmInputs.configure(font="-family {Segoe UI} -size 9")
        self.frmInputs.configure(foreground="black")
        self.frmInputs.configure(text='''Dataset Inputs''')
        self.frmInputs.configure(background="#d9d9d9")
        self.frmInputs.configure(highlightbackground="#d9d9d9")
        self.frmInputs.configure(highlightcolor="#000000")

        self.lblInputDatasetLabel = tk.Label(self.frmInputs)
        self.lblInputDatasetLabel.place(relx=0.039, rely=0.057, height=27, width=92, bordermode='ignore')
        self.lblInputDatasetLabel.configure(activebackground="#d9d9d9")
        self.lblInputDatasetLabel.configure(activeforeground="black")
        self.lblInputDatasetLabel.configure(anchor='w')
        self.lblInputDatasetLabel.configure(background="#d9d9d9")
        self.lblInputDatasetLabel.configure(compound='left')
        self.lblInputDatasetLabel.configure(disabledforeground="#a3a3a3")
        self.lblInputDatasetLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblInputDatasetLabel.configure(foreground="black")
        self.lblInputDatasetLabel.configure(highlightbackground="#d9d9d9")
        self.lblInputDatasetLabel.configure(highlightcolor="#000000")
        self.lblInputDatasetLabel.configure(text='''Input Dataset:''')

        self.lblInputFileTypeLabel = tk.Label(self.frmInputs)
        self.lblInputFileTypeLabel.place(relx=0.039, rely=0.486, height=21, width=91, bordermode='ignore')
        self.lblInputFileTypeLabel.configure(activebackground="#d9d9d9")
        self.lblInputFileTypeLabel.configure(activeforeground="black")
        self.lblInputFileTypeLabel.configure(anchor='w')
        self.lblInputFileTypeLabel.configure(background="#d9d9d9")
        self.lblInputFileTypeLabel.configure(compound='left')
        self.lblInputFileTypeLabel.configure(disabledforeground="#a3a3a3")
        self.lblInputFileTypeLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblInputFileTypeLabel.configure(foreground="#000000")
        self.lblInputFileTypeLabel.configure(highlightbackground="#d9d9d9")
        self.lblInputFileTypeLabel.configure(highlightcolor="#000000")
        self.lblInputFileTypeLabel.configure(text='''Input File Type:''')

        self.lblOutputFileTypeLabel = tk.Label(self.frmInputs)
        self.lblOutputFileTypeLabel.place(relx=0.039, rely=0.571, height=21, width=101, bordermode='ignore')
        self.lblOutputFileTypeLabel.configure(activebackground="#d9d9d9")
        self.lblOutputFileTypeLabel.configure(activeforeground="black")
        self.lblOutputFileTypeLabel.configure(anchor='w')
        self.lblOutputFileTypeLabel.configure(background="#d9d9d9")
        self.lblOutputFileTypeLabel.configure(compound='left')
        self.lblOutputFileTypeLabel.configure(disabledforeground="#a3a3a3")
        self.lblOutputFileTypeLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblOutputFileTypeLabel.configure(foreground="#000000")
        self.lblOutputFileTypeLabel.configure(highlightbackground="#d9d9d9")
        self.lblOutputFileTypeLabel.configure(highlightcolor="#000000")
        self.lblOutputFileTypeLabel.configure(text='''Output File Type:''')

        self.frmImageProperties = tk.LabelFrame(self.frmInputs)
        self.frmImageProperties.place(relx=0.039, rely=0.629, relheight=0.357, relwidth=0.922, bordermode='ignore')
        self.frmImageProperties.configure(relief='groove')
        self.frmImageProperties.configure(font="-family {Segoe UI} -size 9")
        self.frmImageProperties.configure(foreground="#000000")
        self.frmImageProperties.configure(text='''Image Properties''')
        self.frmImageProperties.configure(background="#d9d9d9")
        self.frmImageProperties.configure(highlightbackground="#d9d9d9")
        self.frmImageProperties.configure(highlightcolor="#000000")

        self.lblWidthLabel = tk.Label(self.frmImageProperties)
        self.lblWidthLabel.place(relx=0.042, rely=0.24, height=21, width=43, bordermode='ignore')
        self.lblWidthLabel.configure(activebackground="#d9d9d9")
        self.lblWidthLabel.configure(activeforeground="black")
        self.lblWidthLabel.configure(anchor='w')
        self.lblWidthLabel.configure(background="#d9d9d9")
        self.lblWidthLabel.configure(compound='left')
        self.lblWidthLabel.configure(disabledforeground="#a3a3a3")
        self.lblWidthLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblWidthLabel.configure(foreground="#000000")
        self.lblWidthLabel.configure(highlightbackground="#d9d9d9")
        self.lblWidthLabel.configure(highlightcolor="#000000")
        self.lblWidthLabel.configure(text='''Width:''')

        self.lblHeightLabel = tk.Label(self.frmImageProperties)
        self.lblHeightLabel.place(relx=0.042, rely=0.48, height=21, width=47, bordermode='ignore')
        self.lblHeightLabel.configure(activebackground="#d9d9d9")
        self.lblHeightLabel.configure(activeforeground="black")
        self.lblHeightLabel.configure(anchor='w')
        self.lblHeightLabel.configure(background="#d9d9d9")
        self.lblHeightLabel.configure(compound='left')
        self.lblHeightLabel.configure(disabledforeground="#a3a3a3")
        self.lblHeightLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblHeightLabel.configure(foreground="#000000")
        self.lblHeightLabel.configure(highlightbackground="#d9d9d9")
        self.lblHeightLabel.configure(highlightcolor="#000000")
        self.lblHeightLabel.configure(text='''Height:''')

        self.lblChannelsLabel = tk.Label(self.frmImageProperties)
        self.lblChannelsLabel.place(relx=0.042, rely=0.72, height=21, width=58, bordermode='ignore')
        self.lblChannelsLabel.configure(activebackground="#d9d9d9")
        self.lblChannelsLabel.configure(activeforeground="black")
        self.lblChannelsLabel.configure(anchor='w')
        self.lblChannelsLabel.configure(background="#d9d9d9")
        self.lblChannelsLabel.configure(compound='left')
        self.lblChannelsLabel.configure(disabledforeground="#a3a3a3")
        self.lblChannelsLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblChannelsLabel.configure(foreground="#000000")
        self.lblChannelsLabel.configure(highlightbackground="#d9d9d9")
        self.lblChannelsLabel.configure(highlightcolor="#000000")
        self.lblChannelsLabel.configure(text='''Channels:''')

        self.txtWidth = tk.Entry(self.frmImageProperties)
        self.txtWidth.place(relx=0.424, rely=0.24, relheight=0.192, relwidth=0.525, bordermode='ignore')
        self.txtWidth.configure(background="white")
        self.txtWidth.configure(font="TkTextFont")
        self.txtWidth.configure(foreground="black")
        self.txtWidth.configure(highlightbackground="#d9d9d9")
        self.txtWidth.configure(highlightcolor="#000000")
        self.txtWidth.configure(insertbackground="#000000")
        self.txtWidth.configure(selectbackground="#d9d9d9")
        self.txtWidth.configure(selectforeground="black")
        self.txtWidth.configure(textvar=self.patch_width)

        self.txtHeight = tk.Entry(self.frmImageProperties)
        self.txtHeight.place(relx=0.424, rely=0.48, relheight=0.192, relwidth=0.525, bordermode='ignore')
        self.txtHeight.configure(background="white")
        self.txtHeight.configure(font="TkTextFont")
        self.txtHeight.configure(foreground="black")
        self.txtHeight.configure(highlightbackground="#d9d9d9")
        self.txtHeight.configure(highlightcolor="#000000")
        self.txtHeight.configure(insertbackground="#000000")
        self.txtHeight.configure(selectbackground="#d9d9d9")
        self.txtHeight.configure(selectforeground="black")
        self.txtHeight.configure(textvar=self.patch_height)

        self.cmbChannels = ttk.Combobox(self.frmImageProperties)
        self.cmbChannels.place(relx=0.424, rely=0.72, relheight=0.2, relwidth=0.538, bordermode='ignore')
        self.cmbChannels.configure(font="-family {Segoe UI} -size 9")
        self.cmbChannels.configure(values=self.config.get("DEFAULT", "channels").split(','))
        self.cmbChannels.configure(textvariable=self.patch_channels)

        self.lblLocalPathLabel = tk.Label(self.frmInputs)
        self.lblLocalPathLabel.place(relx=0.031, rely=0.4, height=27, width=67, bordermode='ignore')
        self.lblLocalPathLabel.configure(activebackground="#d9d9d9")
        self.lblLocalPathLabel.configure(activeforeground="black")
        self.lblLocalPathLabel.configure(anchor='w')
        self.lblLocalPathLabel.configure(background="#d9d9d9")
        self.lblLocalPathLabel.configure(compound='left')
        self.lblLocalPathLabel.configure(disabledforeground="#a3a3a3")
        self.lblLocalPathLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblLocalPathLabel.configure(foreground="black")
        self.lblLocalPathLabel.configure(highlightbackground="#d9d9d9")
        self.lblLocalPathLabel.configure(highlightcolor="#000000")
        self.lblLocalPathLabel.configure(text='''Local Path''')

        self.lblMongoDBLabel = tk.Label(self.frmInputs)
        self.lblMongoDBLabel.place(relx=0.344, rely=0.4, height=27, width=64, bordermode='ignore')
        self.lblMongoDBLabel.configure(activebackground="#d9d9d9")
        self.lblMongoDBLabel.configure(activeforeground="black")
        self.lblMongoDBLabel.configure(anchor='w')
        self.lblMongoDBLabel.configure(background="#d9d9d9")
        self.lblMongoDBLabel.configure(compound='left')
        self.lblMongoDBLabel.configure(disabledforeground="#a3a3a3")
        self.lblMongoDBLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblMongoDBLabel.configure(foreground="black")
        self.lblMongoDBLabel.configure(highlightbackground="#d9d9d9")
        self.lblMongoDBLabel.configure(highlightcolor="#000000")
        self.lblMongoDBLabel.configure(text='''MongoDB''')

        self.lblCloudLabel = tk.Label(self.frmInputs)
        self.lblCloudLabel.place(relx=0.676, rely=0.4, height=27, width=53, bordermode='ignore')
        self.lblCloudLabel.configure(activebackground="#d9d9d9")
        self.lblCloudLabel.configure(activeforeground="black")
        self.lblCloudLabel.configure(anchor='w')
        self.lblCloudLabel.configure(background="#d9d9d9")
        self.lblCloudLabel.configure(compound='left')
        self.lblCloudLabel.configure(disabledforeground="#a3a3a3")
        self.lblCloudLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblCloudLabel.configure(foreground="#000000")
        self.lblCloudLabel.configure(highlightbackground="#d9d9d9")
        self.lblCloudLabel.configure(highlightcolor="#000000")
        self.lblCloudLabel.configure(text='''Cloud''')

        self.btnLocal = tk.Button(self.frmInputs)
        self.btnLocal.place(relx=0.031, rely=0.251, height=48, width=48, bordermode='ignore')
        self.btnLocal.configure(activebackground="#d9d9d9")
        self.btnLocal.configure(activeforeground="black")
        self.btnLocal.configure(background="#d9d9d9")
        self.btnLocal.configure(disabledforeground="#a3a3a3")
        self.btnLocal.configure(font="-family {Segoe UI} -size 9")
        self.btnLocal.configure(foreground="#000000")
        self.btnLocal.configure(highlightbackground="#d9d9d9")
        self.btnLocal.configure(highlightcolor="#000000")
        self._img2 = ImageTk.PhotoImage(file=os.path.join(self.assets, "folder.png"))
        self.btnLocal.configure(image=self._img2)

        self.btnMongo = tk.Button(self.frmInputs)
        self.btnMongo.place(relx=0.344, rely=0.251, height=48, width=48, bordermode='ignore')
        self.btnMongo.configure(activebackground="#d9d9d9")
        self.btnMongo.configure(activeforeground="black")
        self.btnMongo.configure(background="#d9d9d9")
        self.btnMongo.configure(disabledforeground="#a3a3a3")
        self.btnMongo.configure(font="-family {Segoe UI} -size 9")
        self.btnMongo.configure(foreground="#000000")
        self.btnMongo.configure(highlightbackground="#d9d9d9")
        self.btnMongo.configure(highlightcolor="#000000")
        self._img1 = ImageTk.PhotoImage(file=os.path.join(self.assets, "mongodb.png"))
        self.btnMongo.configure(image=self._img1)
        self.btnMongo.configure(justify='left')

        self.btnCloud = tk.Button(self.frmInputs)
        self.btnCloud.place(relx=0.703, rely=0.229, height=50, width=50, bordermode='ignore')
        self.btnCloud.configure(activebackground="#d9d9d9")
        self.btnCloud.configure(activeforeground="black")
        self.btnCloud.configure(background="#d9d9d9")
        self.btnCloud.configure(disabledforeground="#a3a3a3")
        self.btnCloud.configure(font="-family {Segoe UI} -size 9")
        self.btnCloud.configure(foreground="#000000")
        self.btnCloud.configure(highlightbackground="#d9d9d9")
        self.btnCloud.configure(highlightcolor="#000000")
        self._img3 = ImageTk.PhotoImage(file=os.path.join(self.assets, "cloud.png"))
        self.btnCloud.configure(image=self._img3)
        self.btnCloud.configure(justify='left')

        self.lblInputDataset = tk.Label(self.frmInputs)
        self.lblInputDataset.place(relx=0.039, rely=0.143, height=14, width=230, bordermode='ignore')
        self.lblInputDataset.configure(activebackground="#d9d9d9")
        self.lblInputDataset.configure(activeforeground="black")
        self.lblInputDataset.configure(anchor='w')
        self.lblInputDataset.configure(background="#d9d9d9")
        self.lblInputDataset.configure(compound='left')
        self.lblInputDataset.configure(disabledforeground="#a3a3a3")
        self.lblInputDataset.configure(font="-family {Segoe UI} -size 9")
        self.lblInputDataset.configure(foreground="black")
        self.lblInputDataset.configure(highlightbackground="#d9d9d9")
        self.lblInputDataset.configure(highlightcolor="#000000")
        self.lblInputDataset.configure(text='''<Dataset Path>''')
        self.lblInputDataset.configure(textvar=self.dataset_path)

        self.cmbInputTypes = ttk.Combobox(self.frmInputs)
        self.cmbInputTypes.place(relx=0.508, rely=0.486, relheight=0.054, relwidth=0.418, bordermode='ignore')
        self.cmbInputTypes.configure(font="-family {Segoe UI} -size 9")
        self.cmbInputTypes.configure(values=self.config.get("DEFAULT", "input_file_types").split(','))
        self.cmbInputTypes.configure(textvariable=self.input_file_type)

        self.cmbOutputTypes = ttk.Combobox(self.frmInputs)
        self.cmbOutputTypes.place(relx=0.508, rely=0.571, relheight=0.054, relwidth=0.418, bordermode='ignore')
        self.cmbOutputTypes.configure(font="-family {Segoe UI} -size 9")
        self.cmbOutputTypes.configure(values=self.config.get("DEFAULT", "output_file_types").split(','))
        self.cmbOutputTypes.configure(textvariable=self.output_file_type)

        self.frmQuPath = tk.LabelFrame(self.top)
        self.frmQuPath.place(relx=0.344, rely=0.553, relheight=0.439, relwidth=0.313)
        self.frmQuPath.configure(relief='groove')
        self.frmQuPath.configure(font="-family {Segoe UI} -size 9")
        self.frmQuPath.configure(foreground="#000000")
        self.frmQuPath.configure(text='''Image Labeling & QuPath''')
        self.frmQuPath.configure(background="#d9d9d9")
        self.frmQuPath.configure(highlightbackground="#d9d9d9")
        self.frmQuPath.configure(highlightcolor="#000000")

        self.lblQuPathStatusLabel = tk.Label(self.frmQuPath)
        self.lblQuPathStatusLabel.place(relx=0.041, rely=0.074, height=21, width=44, bordermode='ignore')
        self.lblQuPathStatusLabel.configure(activebackground="#d9d9d9")
        self.lblQuPathStatusLabel.configure(activeforeground="black")
        self.lblQuPathStatusLabel.configure(anchor='w')
        self.lblQuPathStatusLabel.configure(background="#d9d9d9")
        self.lblQuPathStatusLabel.configure(compound='left')
        self.lblQuPathStatusLabel.configure(disabledforeground="#a3a3a3")
        self.lblQuPathStatusLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblQuPathStatusLabel.configure(foreground="#000000")
        self.lblQuPathStatusLabel.configure(highlightbackground="#d9d9d9")
        self.lblQuPathStatusLabel.configure(highlightcolor="#000000")
        self.lblQuPathStatusLabel.configure(text='''Status:''')

        self.btnQuPathParams = tk.Button(self.frmQuPath)
        self.btnQuPathParams.place(relx=0.041, rely=0.259, height=26, width=227, bordermode='ignore')
        self.btnQuPathParams.configure(activebackground="#d9d9d9")
        self.btnQuPathParams.configure(activeforeground="black")
        self.btnQuPathParams.configure(background="#d9d9d9")
        self.btnQuPathParams.configure(disabledforeground="#a3a3a3")
        self.btnQuPathParams.configure(font="-family {Segoe UI} -size 9")
        self.btnQuPathParams.configure(foreground="#000000")
        self.btnQuPathParams.configure(highlightbackground="#d9d9d9")
        self.btnQuPathParams.configure(highlightcolor="#000000")
        self.btnQuPathParams.configure(text='''QuPath Parameters''')

        self.btnQuPathAnalysis = tk.Button(self.frmQuPath)
        self.btnQuPathAnalysis.place(relx=0.041, rely=0.37, height=26, width=227, bordermode='ignore')
        self.btnQuPathAnalysis.configure(activebackground="#d9d9d9")
        self.btnQuPathAnalysis.configure(activeforeground="black")
        self.btnQuPathAnalysis.configure(background="#d9d9d9")
        self.btnQuPathAnalysis.configure(disabledforeground="#a3a3a3")
        self.btnQuPathAnalysis.configure(font="-family {Segoe UI} -size 9")
        self.btnQuPathAnalysis.configure(foreground="#000000")
        self.btnQuPathAnalysis.configure(highlightbackground="#d9d9d9")
        self.btnQuPathAnalysis.configure(highlightcolor="#000000")
        self.btnQuPathAnalysis.configure(text='''QuPath Analysis''')

        self.lblQuPathStatus = tk.Label(self.frmQuPath)
        self.lblQuPathStatus.place(relx=0.244, rely=0.074, height=21, width=150, bordermode='ignore')
        self.lblQuPathStatus.configure(activebackground="#d9d9d9")
        self.lblQuPathStatus.configure(activeforeground="black")
        self.lblQuPathStatus.configure(anchor='w')
        self.lblQuPathStatus.configure(background="#d9d9d9")
        self.lblQuPathStatus.configure(compound='left')
        self.lblQuPathStatus.configure(disabledforeground="#a3a3a3")
        self.lblQuPathStatus.configure(font="-family {Segoe UI} -size 9")
        self.lblQuPathStatus.configure(foreground="#000000")
        self.lblQuPathStatus.configure(highlightbackground="#d9d9d9")
        self.lblQuPathStatus.configure(highlightcolor="#000000")
        self.lblQuPathStatus.configure(text='''Ready for labeling.''')
        self.lblQuPathStatus.configure(textvar=self.qupath_status)

        self.pbQuPath = ttk.Progressbar(self.frmQuPath)
        self.pbQuPath.place(relx=0.041, rely=0.148, relwidth=0.935, relheight=0.0, height=19, bordermode='ignore')
        self.pbQuPath.configure(length="230")
        self.pbQuPath.configure(variable=self.qupath_progress)

        self.frmNormalization = tk.LabelFrame(self.top)
        self.frmNormalization.place(relx=0.344, rely=0.276, relheight=0.268, relwidth=0.313)
        self.frmNormalization.configure(relief='groove')
        self.frmNormalization.configure(font="-family {Segoe UI} -size 9")
        self.frmNormalization.configure(foreground="black")
        self.frmNormalization.configure(text='''Normalization''')
        self.frmNormalization.configure(background="#d9d9d9")
        self.frmNormalization.configure(highlightbackground="#d9d9d9")
        self.frmNormalization.configure(highlightcolor="#000000")

        self.lblNormStatusLabel = tk.Label(self.frmNormalization)
        self.lblNormStatusLabel.place(relx=0.041, rely=0.242, height=21, width=44, bordermode='ignore')
        self.lblNormStatusLabel.configure(activebackground="#d9d9d9")
        self.lblNormStatusLabel.configure(activeforeground="black")
        self.lblNormStatusLabel.configure(anchor='w')
        self.lblNormStatusLabel.configure(background="#d9d9d9")
        self.lblNormStatusLabel.configure(compound='left')
        self.lblNormStatusLabel.configure(disabledforeground="#a3a3a3")
        self.lblNormStatusLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblNormStatusLabel.configure(foreground="#000000")
        self.lblNormStatusLabel.configure(highlightbackground="#d9d9d9")
        self.lblNormStatusLabel.configure(highlightcolor="#000000")
        self.lblNormStatusLabel.configure(text='''Status:''')

        self.lblNormAlgoLabel = tk.Label(self.frmNormalization)
        self.lblNormAlgoLabel.place(relx=0.041, rely=0.121, height=21, width=146, bordermode='ignore')
        self.lblNormAlgoLabel.configure(activebackground="#d9d9d9")
        self.lblNormAlgoLabel.configure(activeforeground="black")
        self.lblNormAlgoLabel.configure(anchor='w')
        self.lblNormAlgoLabel.configure(background="#d9d9d9")
        self.lblNormAlgoLabel.configure(compound='left')
        self.lblNormAlgoLabel.configure(disabledforeground="#a3a3a3")
        self.lblNormAlgoLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblNormAlgoLabel.configure(foreground="#000000")
        self.lblNormAlgoLabel.configure(highlightbackground="#d9d9d9")
        self.lblNormAlgoLabel.configure(highlightcolor="#000000")
        self.lblNormAlgoLabel.configure(text='''Normalization Algorithm:''')

        self.btnNormLoadModel = tk.Button(self.frmNormalization)
        self.btnNormLoadModel.place(relx=0.041, rely=0.606, height=26, width=117, bordermode='ignore')
        self.btnNormLoadModel.configure(activebackground="#d9d9d9")
        self.btnNormLoadModel.configure(activeforeground="black")
        self.btnNormLoadModel.configure(background="#d9d9d9")
        self.btnNormLoadModel.configure(disabledforeground="#a3a3a3")
        self.btnNormLoadModel.configure(font="-family {Segoe UI} -size 9")
        self.btnNormLoadModel.configure(foreground="#000000")
        self.btnNormLoadModel.configure(highlightbackground="#d9d9d9")
        self.btnNormLoadModel.configure(highlightcolor="#000000")
        self.btnNormLoadModel.configure(text='''Load Model''')

        self.btnNormTrainModel = tk.Button(self.frmNormalization)
        self.btnNormTrainModel.place(relx=0.528, rely=0.606, height=26, width=107, bordermode='ignore')
        self.btnNormTrainModel.configure(activebackground="#d9d9d9")
        self.btnNormTrainModel.configure(activeforeground="black")
        self.btnNormTrainModel.configure(background="#d9d9d9")
        self.btnNormTrainModel.configure(disabledforeground="#a3a3a3")
        self.btnNormTrainModel.configure(font="-family {Segoe UI} -size 9")
        self.btnNormTrainModel.configure(foreground="#000000")
        self.btnNormTrainModel.configure(highlightbackground="#d9d9d9")
        self.btnNormTrainModel.configure(highlightcolor="#000000")
        self.btnNormTrainModel.configure(text='''Train Model''')

        self.btnNormalize = tk.Button(self.frmNormalization)
        self.btnNormalize.place(relx=0.041, rely=0.788, height=26, width=227, bordermode='ignore')
        self.btnNormalize.configure(activebackground="#d9d9d9")
        self.btnNormalize.configure(activeforeground="black")
        self.btnNormalize.configure(background="#d9d9d9")
        self.btnNormalize.configure(disabledforeground="#a3a3a3")
        self.btnNormalize.configure(font="-family {Segoe UI} -size 9")
        self.btnNormalize.configure(foreground="black")
        self.btnNormalize.configure(highlightbackground="#d9d9d9")
        self.btnNormalize.configure(highlightcolor="#000000")
        self.btnNormalize.configure(text='''Normalize''')

        self.lblNormAlgo = tk.Label(self.frmNormalization)
        self.lblNormAlgo.place(relx=0.65, rely=0.121, height=21, width=62, bordermode='ignore')
        self.lblNormAlgo.configure(activebackground="#d9d9d9")
        self.lblNormAlgo.configure(activeforeground="black")
        self.lblNormAlgo.configure(anchor='w')
        self.lblNormAlgo.configure(background="#d9d9d9")
        self.lblNormAlgo.configure(compound='left')
        self.lblNormAlgo.configure(disabledforeground="#a3a3a3")
        self.lblNormAlgo.configure(font="-family {Segoe UI} -size 9")
        self.lblNormAlgo.configure(foreground="#000000")
        self.lblNormAlgo.configure(highlightbackground="#d9d9d9")
        self.lblNormAlgo.configure(highlightcolor="#000000")
        self.lblNormAlgo.configure(text='''Histogram''')
        self.lblNormAlgo.configure(textvar=self.norm_algo_name)

        self.lblNormStatus = tk.Label(self.frmNormalization)
        self.lblNormStatus.place(relx=0.244, rely=0.242, height=21, width=137, bordermode='ignore')
        self.lblNormStatus.configure(activebackground="#d9d9d9")
        self.lblNormStatus.configure(activeforeground="black")
        self.lblNormStatus.configure(anchor='w')
        self.lblNormStatus.configure(background="#d9d9d9")
        self.lblNormStatus.configure(compound='left')
        self.lblNormStatus.configure(disabledforeground="#a3a3a3")
        self.lblNormStatus.configure(font="-family {Segoe UI} -size 9")
        self.lblNormStatus.configure(foreground="#000000")
        self.lblNormStatus.configure(highlightbackground="#d9d9d9")
        self.lblNormStatus.configure(highlightcolor="#000000")
        self.lblNormStatus.configure(text='''Ready for Normalization.''')
        self.lblNormStatus.configure(textvar=self.norm_status)

        self.pbNorm = ttk.Progressbar(self.frmNormalization)
        self.pbNorm.place(relx=0.041, rely=0.424, relwidth=0.935, relheight=0.0, height=19, bordermode='ignore')
        self.pbNorm.configure(length="230")
        self.pbNorm.configure(variable=self.norm_progress)

        self.frmROI = tk.LabelFrame(self.top)
        self.frmROI.place(relx=0.344, rely=0.0, relheight=0.268, relwidth=0.313)
        self.frmROI.configure(relief='groove')
        self.frmROI.configure(font="-family {Segoe UI} -size 9")
        self.frmROI.configure(foreground="#000000")
        self.frmROI.configure(text='''Preprocess & ROI''')
        self.frmROI.configure(background="#d9d9d9")
        self.frmROI.configure(highlightbackground="#d9d9d9")
        self.frmROI.configure(highlightcolor="#000000")

        self.lblROIStatusLabel = tk.Label(self.frmROI)
        self.lblROIStatusLabel.place(relx=0.041, rely=0.242, height=21, width=44, bordermode='ignore')
        self.lblROIStatusLabel.configure(activebackground="#d9d9d9")
        self.lblROIStatusLabel.configure(activeforeground="black")
        self.lblROIStatusLabel.configure(anchor='w')
        self.lblROIStatusLabel.configure(background="#d9d9d9")
        self.lblROIStatusLabel.configure(compound='left')
        self.lblROIStatusLabel.configure(disabledforeground="#a3a3a3")
        self.lblROIStatusLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblROIStatusLabel.configure(foreground="#000000")
        self.lblROIStatusLabel.configure(highlightbackground="#d9d9d9")
        self.lblROIStatusLabel.configure(highlightcolor="#000000")
        self.lblROIStatusLabel.configure(text='''Status:''')

        self.lblROIAlgorithmLabel = tk.Label(self.frmROI)
        self.lblROIAlgorithmLabel.place(relx=0.041, rely=0.121, height=21, width=97, bordermode='ignore')
        self.lblROIAlgorithmLabel.configure(activebackground="#d9d9d9")
        self.lblROIAlgorithmLabel.configure(activeforeground="black")
        self.lblROIAlgorithmLabel.configure(anchor='w')
        self.lblROIAlgorithmLabel.configure(background="#d9d9d9")
        self.lblROIAlgorithmLabel.configure(compound='left')
        self.lblROIAlgorithmLabel.configure(disabledforeground="#a3a3a3")
        self.lblROIAlgorithmLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblROIAlgorithmLabel.configure(foreground="#000000")
        self.lblROIAlgorithmLabel.configure(highlightbackground="#d9d9d9")
        self.lblROIAlgorithmLabel.configure(highlightcolor="#000000")
        self.lblROIAlgorithmLabel.configure(text='''Filter Algorithm:''')

        self.lblROIStatus = tk.Label(self.frmROI)
        self.lblROIStatus.place(relx=0.244, rely=0.242, height=21, width=137, bordermode='ignore')
        self.lblROIStatus.configure(activebackground="#d9d9d9")
        self.lblROIStatus.configure(activeforeground="black")
        self.lblROIStatus.configure(anchor='w')
        self.lblROIStatus.configure(background="#d9d9d9")
        self.lblROIStatus.configure(compound='left')
        self.lblROIStatus.configure(disabledforeground="#a3a3a3")
        self.lblROIStatus.configure(font="-family {Segoe UI} -size 9")
        self.lblROIStatus.configure(foreground="#000000")
        self.lblROIStatus.configure(highlightbackground="#d9d9d9")
        self.lblROIStatus.configure(highlightcolor="#000000")
        self.lblROIStatus.configure(text='''Ready for filtering.''')
        self.lblROIStatus.configure(textvar=self.roi_status)

        self.lblROIAlgorithm = tk.Label(self.frmROI)
        self.lblROIAlgorithm.place(relx=0.447, rely=0.121, height=21, width=98, bordermode='ignore')
        self.lblROIAlgorithm.configure(activebackground="#d9d9d9")
        self.lblROIAlgorithm.configure(activeforeground="black")
        self.lblROIAlgorithm.configure(anchor='w')
        self.lblROIAlgorithm.configure(background="#d9d9d9")
        self.lblROIAlgorithm.configure(compound='left')
        self.lblROIAlgorithm.configure(disabledforeground="#a3a3a3")
        self.lblROIAlgorithm.configure(font="-family {Segoe UI} -size 9")
        self.lblROIAlgorithm.configure(foreground="#000000")
        self.lblROIAlgorithm.configure(highlightbackground="#d9d9d9")
        self.lblROIAlgorithm.configure(highlightcolor="#000000")
        self.lblROIAlgorithm.configure(text='''Hard coded filter.''')
        self.lblROIAlgorithm.configure(textvar=self.roi_algo_name)

        self.btnROIFilter = tk.Button(self.frmROI)
        self.btnROIFilter.place(relx=0.041, rely=0.788, height=26, width=227, bordermode='ignore')
        self.btnROIFilter.configure(activebackground="#d9d9d9")
        self.btnROIFilter.configure(activeforeground="black")
        self.btnROIFilter.configure(background="#d9d9d9")
        self.btnROIFilter.configure(disabledforeground="#a3a3a3")
        self.btnROIFilter.configure(font="-family {Segoe UI} -size 9")
        self.btnROIFilter.configure(foreground="black")
        self.btnROIFilter.configure(highlightbackground="#d9d9d9")
        self.btnROIFilter.configure(highlightcolor="#000000")
        self.btnROIFilter.configure(text='''Filter Dataset''')

        self.btnROILoadModel = tk.Button(self.frmROI)
        self.btnROILoadModel.place(relx=0.041, rely=0.606, height=26, width=117, bordermode='ignore')
        self.btnROILoadModel.configure(activebackground="#d9d9d9")
        self.btnROILoadModel.configure(activeforeground="black")
        self.btnROILoadModel.configure(background="#d9d9d9")
        self.btnROILoadModel.configure(disabledforeground="#a3a3a3")
        self.btnROILoadModel.configure(font="-family {Segoe UI} -size 9")
        self.btnROILoadModel.configure(foreground="#000000")
        self.btnROILoadModel.configure(highlightbackground="#d9d9d9")
        self.btnROILoadModel.configure(highlightcolor="#000000")
        self.btnROILoadModel.configure(text='''Load Model''')

        self.btnROITrainModel = tk.Button(self.frmROI)
        self.btnROITrainModel.place(relx=0.528, rely=0.606, height=26, width=107, bordermode='ignore')
        self.btnROITrainModel.configure(activebackground="#d9d9d9")
        self.btnROITrainModel.configure(activeforeground="black")
        self.btnROITrainModel.configure(background="#d9d9d9")
        self.btnROITrainModel.configure(disabledforeground="#a3a3a3")
        self.btnROITrainModel.configure(font="-family {Segoe UI} -size 9")
        self.btnROITrainModel.configure(foreground="#000000")
        self.btnROITrainModel.configure(highlightbackground="#d9d9d9")
        self.btnROITrainModel.configure(highlightcolor="#000000")
        self.btnROITrainModel.configure(text='''Train Model''')

        self.pbROI = ttk.Progressbar(self.frmROI)
        self.pbROI.place(relx=0.041, rely=0.424, relwidth=0.935, relheight=0.0, height=19, bordermode='ignore')
        self.pbROI.configure(length="230")
        self.pbROI.configure(variable=self.roi_progress)

        self.frmResultsframe = tk.LabelFrame(self.top)
        self.frmResultsframe.place(relx=0.662, rely=0.276, relheight=0.715, relwidth=0.326)
        self.frmResultsframe.configure(relief='groove')
        self.frmResultsframe.configure(font="-family {Segoe UI} -size 9")
        self.frmResultsframe.configure(foreground="#000000")
        self.frmResultsframe.configure(text='''Results''')
        self.frmResultsframe.configure(background="#d9d9d9")
        self.frmResultsframe.configure(highlightbackground="#d9d9d9")
        self.frmResultsframe.configure(highlightcolor="#000000")

        self.lblProcessedDatasetLabel = tk.Label(self.frmResultsframe)
        self.lblProcessedDatasetLabel.place(relx=0.039, rely=0.045, height=21, width=111, bordermode='ignore')
        self.lblProcessedDatasetLabel.configure(activebackground="#d9d9d9")
        self.lblProcessedDatasetLabel.configure(activeforeground="black")
        self.lblProcessedDatasetLabel.configure(anchor='w')
        self.lblProcessedDatasetLabel.configure(background="#d9d9d9")
        self.lblProcessedDatasetLabel.configure(compound='left')
        self.lblProcessedDatasetLabel.configure(disabledforeground="#a3a3a3")
        self.lblProcessedDatasetLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblProcessedDatasetLabel.configure(foreground="#000000")
        self.lblProcessedDatasetLabel.configure(highlightbackground="#d9d9d9")
        self.lblProcessedDatasetLabel.configure(highlightcolor="#000000")
        self.lblProcessedDatasetLabel.configure(text='''Processed Dataset:''')

        self.lblResultsDatasetLabel = tk.Label(self.frmResultsframe)
        self.lblResultsDatasetLabel.place(relx=0.039, rely=0.136, height=21, width=97, bordermode='ignore')
        self.lblResultsDatasetLabel.configure(activebackground="#d9d9d9")
        self.lblResultsDatasetLabel.configure(activeforeground="black")
        self.lblResultsDatasetLabel.configure(anchor='w')
        self.lblResultsDatasetLabel.configure(background="#d9d9d9")
        self.lblResultsDatasetLabel.configure(compound='left')
        self.lblResultsDatasetLabel.configure(disabledforeground="#a3a3a3")
        self.lblResultsDatasetLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblResultsDatasetLabel.configure(foreground="#000000")
        self.lblResultsDatasetLabel.configure(highlightbackground="#d9d9d9")
        self.lblResultsDatasetLabel.configure(highlightcolor="#000000")
        self.lblResultsDatasetLabel.configure(text='''Results Outputs:''')

        self.btnIntensity = tk.Button(self.frmResultsframe)
        self.btnIntensity.place(relx=0.039, rely=0.25, height=26, width=237, bordermode='ignore')
        self.btnIntensity.configure(activebackground="#d9d9d9")
        self.btnIntensity.configure(activeforeground="black")
        self.btnIntensity.configure(background="#d9d9d9")
        self.btnIntensity.configure(disabledforeground="#a3a3a3")
        self.btnIntensity.configure(font="-family {Segoe UI} -size 9")
        self.btnIntensity.configure(foreground="#000000")
        self.btnIntensity.configure(highlightbackground="#d9d9d9")
        self.btnIntensity.configure(highlightcolor="#000000")
        self.btnIntensity.configure(text='''Intensity Distribution''')

        self.btnPCA = tk.Button(self.frmResultsframe)
        self.btnPCA.place(relx=0.039, rely=0.318, height=26, width=237, bordermode='ignore')
        self.btnPCA.configure(activebackground="#d9d9d9")
        self.btnPCA.configure(activeforeground="black")
        self.btnPCA.configure(background="#d9d9d9")
        self.btnPCA.configure(disabledforeground="#a3a3a3")
        self.btnPCA.configure(font="-family {Segoe UI} -size 9")
        self.btnPCA.configure(foreground="#000000")
        self.btnPCA.configure(highlightbackground="#d9d9d9")
        self.btnPCA.configure(highlightcolor="#000000")
        self.btnPCA.configure(text='''PCA Results''')

        self.btnKMeans = tk.Button(self.frmResultsframe)
        self.btnKMeans.place(relx=0.039, rely=0.386, height=26, width=237, bordermode='ignore')
        self.btnKMeans.configure(activebackground="#d9d9d9")
        self.btnKMeans.configure(activeforeground="black")
        self.btnKMeans.configure(background="#d9d9d9")
        self.btnKMeans.configure(disabledforeground="#a3a3a3")
        self.btnKMeans.configure(font="-family {Segoe UI} -size 9")
        self.btnKMeans.configure(foreground="#000000")
        self.btnKMeans.configure(highlightbackground="#d9d9d9")
        self.btnKMeans.configure(highlightcolor="#000000")
        self.btnKMeans.configure(text='''K-Means Results''')

        self.btnCOX = tk.Button(self.frmResultsframe)
        self.btnCOX.place(relx=0.039, rely=0.455, height=26, width=237, bordermode='ignore')
        self.btnCOX.configure(activebackground="#d9d9d9")
        self.btnCOX.configure(activeforeground="black")
        self.btnCOX.configure(background="#d9d9d9")
        self.btnCOX.configure(disabledforeground="#a3a3a3")
        self.btnCOX.configure(font="-family {Segoe UI} -size 9")
        self.btnCOX.configure(foreground="#000000")
        self.btnCOX.configure(highlightbackground="#d9d9d9")
        self.btnCOX.configure(highlightcolor="#000000")
        self.btnCOX.configure(text='''Confusion Matrix''')

        self.btnFeatures = tk.Button(self.frmResultsframe)
        self.btnFeatures.place(relx=0.039, rely=0.523, height=26, width=237, bordermode='ignore')
        self.btnFeatures.configure(activebackground="#d9d9d9")
        self.btnFeatures.configure(activeforeground="black")
        self.btnFeatures.configure(background="#d9d9d9")
        self.btnFeatures.configure(disabledforeground="#a3a3a3")
        self.btnFeatures.configure(font="-family {Segoe UI} -size 9")
        self.btnFeatures.configure(foreground="#000000")
        self.btnFeatures.configure(highlightbackground="#d9d9d9")
        self.btnFeatures.configure(highlightcolor="#000000")
        self.btnFeatures.configure(text='''Feature Distribution Groups''')

        self.btnAnova = tk.Button(self.frmResultsframe)
        self.btnAnova.place(relx=0.039, rely=0.591, height=26, width=237, bordermode='ignore')
        self.btnAnova.configure(activebackground="#d9d9d9")
        self.btnAnova.configure(activeforeground="black")
        self.btnAnova.configure(background="#d9d9d9")
        self.btnAnova.configure(disabledforeground="#a3a3a3")
        self.btnAnova.configure(font="-family {Segoe UI} -size 9")
        self.btnAnova.configure(foreground="#000000")
        self.btnAnova.configure(highlightbackground="#d9d9d9")
        self.btnAnova.configure(highlightcolor="#000000")
        self.btnAnova.configure(text='''Anova Table''')

        self.btnKaplanMeier = tk.Button(self.frmResultsframe)
        self.btnKaplanMeier.place(relx=0.039, rely=0.659, height=26, width=237, bordermode='ignore')
        self.btnKaplanMeier.configure(activebackground="#d9d9d9")
        self.btnKaplanMeier.configure(activeforeground="black")
        self.btnKaplanMeier.configure(background="#d9d9d9")
        self.btnKaplanMeier.configure(disabledforeground="#a3a3a3")
        self.btnKaplanMeier.configure(font="-family {Segoe UI} -size 9")
        self.btnKaplanMeier.configure(foreground="#000000")
        self.btnKaplanMeier.configure(highlightbackground="#d9d9d9")
        self.btnKaplanMeier.configure(highlightcolor="#000000")
        self.btnKaplanMeier.configure(text='''Kaplan-Meir Graph''')

        self.btnQTLResults = tk.Button(self.frmResultsframe)
        self.btnQTLResults.place(relx=0.039, rely=0.727, height=26, width=237, bordermode='ignore')
        self.btnQTLResults.configure(activebackground="#d9d9d9")
        self.btnQTLResults.configure(activeforeground="black")
        self.btnQTLResults.configure(background="#d9d9d9")
        self.btnQTLResults.configure(disabledforeground="#a3a3a3")
        self.btnQTLResults.configure(font="-family {Segoe UI} -size 9")
        self.btnQTLResults.configure(foreground="#000000")
        self.btnQTLResults.configure(highlightbackground="#d9d9d9")
        self.btnQTLResults.configure(highlightcolor="#000000")
        self.btnQTLResults.configure(text='''QTL Results''')

        self.btnGenerate = tk.Button(self.frmResultsframe)
        self.btnGenerate.place(relx=0.039, rely=0.795, height=26, width=237, bordermode='ignore')
        self.btnGenerate.configure(activebackground="#d9d9d9")
        self.btnGenerate.configure(activeforeground="black")
        self.btnGenerate.configure(background="#d9d9d9")
        self.btnGenerate.configure(disabledforeground="#a3a3a3")
        self.btnGenerate.configure(font="-family {Segoe UI} -size 9")
        self.btnGenerate.configure(foreground="#000000")
        self.btnGenerate.configure(highlightbackground="#d9d9d9")
        self.btnGenerate.configure(highlightcolor="#000000")
        self.btnGenerate.configure(text='''Generate Report''')

        self.lblProcessedDataset = tk.Label(self.frmResultsframe)
        self.lblProcessedDataset.place(relx=0.039, rely=0.091, height=21, width=232, bordermode='ignore')
        self.lblProcessedDataset.configure(activebackground="#d9d9d9")
        self.lblProcessedDataset.configure(activeforeground="black")
        self.lblProcessedDataset.configure(anchor='w')
        self.lblProcessedDataset.configure(background="#d9d9d9")
        self.lblProcessedDataset.configure(compound='left')
        self.lblProcessedDataset.configure(disabledforeground="#a3a3a3")
        self.lblProcessedDataset.configure(font="-family {Segoe UI} -size 9")
        self.lblProcessedDataset.configure(foreground="#000000")
        self.lblProcessedDataset.configure(highlightbackground="#d9d9d9")
        self.lblProcessedDataset.configure(highlightcolor="#000000")
        self.lblProcessedDataset.configure(text='''<Dataset Output>''')
        self.lblProcessedDataset.configure(textvar=self.processed_path)

        self.lblResultsDataset = tk.Label(self.frmResultsframe)
        self.lblResultsDataset.place(relx=0.039, rely=0.182, height=21, width=237, bordermode='ignore')
        self.lblResultsDataset.configure(activebackground="#d9d9d9")
        self.lblResultsDataset.configure(activeforeground="black")
        self.lblResultsDataset.configure(anchor='w')
        self.lblResultsDataset.configure(background="#d9d9d9")
        self.lblResultsDataset.configure(compound='left')
        self.lblResultsDataset.configure(disabledforeground="#a3a3a3")
        self.lblResultsDataset.configure(font="-family {Segoe UI} -size 9")
        self.lblResultsDataset.configure(foreground="#000000")
        self.lblResultsDataset.configure(highlightbackground="#d9d9d9")
        self.lblResultsDataset.configure(highlightcolor="#000000")
        self.lblResultsDataset.configure(text='''<Output Path>''')
        self.lblResultsDataset.configure(textvar=self.results_path)

        self.frmTrain = tk.LabelFrame(self.top)
        self.frmTrain.place(relx=0.662, rely=0.0, relheight=0.27, relwidth=0.326)

        self.frmTrain.configure(relief='groove')
        self.frmTrain.configure(font="-family {Segoe UI} -size 9")
        self.frmTrain.configure(foreground="#000000")
        self.frmTrain.configure(text='''Train''')
        self.frmTrain.configure(background="#d9d9d9")
        self.frmTrain.configure(highlightbackground="#d9d9d9")
        self.frmTrain.configure(highlightcolor="#000000")

        self.lblModelStatusLabel = tk.Label(self.frmTrain)
        self.lblModelStatusLabel.place(relx=0.039, rely=0.12, height=21, width=102, bordermode='ignore')
        self.lblModelStatusLabel.configure(activebackground="#d9d9d9")
        self.lblModelStatusLabel.configure(activeforeground="black")
        self.lblModelStatusLabel.configure(anchor='w')
        self.lblModelStatusLabel.configure(background="#d9d9d9")
        self.lblModelStatusLabel.configure(compound='left')
        self.lblModelStatusLabel.configure(disabledforeground="#a3a3a3")
        self.lblModelStatusLabel.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblModelStatusLabel.configure(foreground="#000000")
        self.lblModelStatusLabel.configure(highlightbackground="#d9d9d9")
        self.lblModelStatusLabel.configure(highlightcolor="#000000")
        self.lblModelStatusLabel.configure(text='''Model Status:''')

        self.btnTrainPathomics = tk.Button(self.frmTrain)
        self.btnTrainPathomics.place(relx=0.039, rely=0.422, height=26, width=237, bordermode='ignore')
        self.btnTrainPathomics.configure(activebackground="#d9d9d9")
        self.btnTrainPathomics.configure(activeforeground="black")
        self.btnTrainPathomics.configure(background="#d9d9d9")
        self.btnTrainPathomics.configure(disabledforeground="#a3a3a3")
        self.btnTrainPathomics.configure(font="-family {Segoe UI} -size 9")
        self.btnTrainPathomics.configure(foreground="#000000")
        self.btnTrainPathomics.configure(highlightbackground="#d9d9d9")
        self.btnTrainPathomics.configure(highlightcolor="#000000")
        self.btnTrainPathomics.configure(text='''Train Pathomics Models''')

        self.lblOptions = tk.Label(self.frmTrain)
        self.lblOptions.place(relx=0.039, rely=0.602, height=21, width=52, bordermode='ignore')
        self.lblOptions.configure(activebackground="#d9d9d9")
        self.lblOptions.configure(activeforeground="black")
        self.lblOptions.configure(anchor='w')
        self.lblOptions.configure(background="#d9d9d9")
        self.lblOptions.configure(compound='left')
        self.lblOptions.configure(disabledforeground="#a3a3a3")
        self.lblOptions.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.lblOptions.configure(foreground="#000000")
        self.lblOptions.configure(highlightbackground="#d9d9d9")
        self.lblOptions.configure(highlightcolor="#000000")
        self.lblOptions.configure(text='''Options:''')

        self.lblModelStatus = tk.Label(self.frmTrain)
        self.lblModelStatus.place(relx=0.352, rely=0.12, height=21, width=143, bordermode='ignore')
        self.lblModelStatus.configure(activebackground="#d9d9d9")
        self.lblModelStatus.configure(activeforeground="black")
        self.lblModelStatus.configure(anchor='w')
        self.lblModelStatus.configure(background="#d9d9d9")
        self.lblModelStatus.configure(compound='left')
        self.lblModelStatus.configure(disabledforeground="#a3a3a3")
        self.lblModelStatus.configure(font="-family {Segoe UI} -size 9")
        self.lblModelStatus.configure(foreground="#000000")
        self.lblModelStatus.configure(highlightbackground="#d9d9d9")
        self.lblModelStatus.configure(highlightcolor="#000000")
        self.lblModelStatus.configure(text='''Model not loaded.''')
        self.lblModelStatus.configure(textvar=self.pathomics_status)

        self.cbKaplanMeier = tk.Checkbutton(self.frmTrain)
        self.cbKaplanMeier.place(relx=0.273, rely=0.602, relheight=0.151, relwidth=0.363, bordermode='ignore')
        self.cbKaplanMeier.configure(activebackground="#d9d9d9")
        self.cbKaplanMeier.configure(activeforeground="black")
        self.cbKaplanMeier.configure(anchor='w')
        self.cbKaplanMeier.configure(background="#d9d9d9")
        self.cbKaplanMeier.configure(compound='left')
        self.cbKaplanMeier.configure(disabledforeground="#a3a3a3")
        self.cbKaplanMeier.configure(font="-family {Segoe UI} -size 9")
        self.cbKaplanMeier.configure(foreground="#000000")
        self.cbKaplanMeier.configure(highlightbackground="#d9d9d9")
        self.cbKaplanMeier.configure(highlightcolor="#000000")
        self.cbKaplanMeier.configure(justify='left')
        self.cbKaplanMeier.configure(text='''Kaplan-Meir''')
        self.cbKaplanMeier.configure(variable=self.kaplan_meier)

        self.cbQTL = tk.Checkbutton(self.frmTrain)
        self.cbQTL.place(relx=0.273, rely=0.723, relheight=0.151, relwidth=0.191, bordermode='ignore')
        self.cbQTL.configure(activebackground="#d9d9d9")
        self.cbQTL.configure(activeforeground="black")
        self.cbQTL.configure(anchor='w')
        self.cbQTL.configure(background="#d9d9d9")
        self.cbQTL.configure(compound='left')
        self.cbQTL.configure(disabledforeground="#a3a3a3")
        self.cbQTL.configure(font="-family {Segoe UI} -size 9")
        self.cbQTL.configure(foreground="#000000")
        self.cbQTL.configure(highlightbackground="#d9d9d9")
        self.cbQTL.configure(highlightcolor="#000000")
        self.cbQTL.configure(justify='left')
        self.cbQTL.configure(text='''QTL''')
        self.cbQTL.configure(variable=self.qtl)

        self.pbTrain = ttk.Progressbar(self.frmTrain)
        self.pbTrain.place(relx=0.039, rely=0.241, relwidth=0.922, relheight=0.0, height=19, bordermode='ignore')
        self.pbTrain.configure(length="220")
        self.pbTrain.configure(variable=self.pathomics_progress)

        # Disable Components.
        self.refresh_buttons()

    def refresh_buttons(self):
        # Inputs.
        self.btnLocal.configure(state=self.config.get("GUI", "btnLocal_state")) # MongoDB
        self.btnMongo.configure(state=self.config.get("GUI", "btnMongo_state")) # MongoDB
        self.btnCloud.configure(state=self.config.get("GUI", "btnCloud_state")) # Cloud

        # Patch Properties.
        self.txtWidth   .configure(state=self.config.get("GUI", "txtWidth_state"))    # Patch Width
        self.txtHeight  .configure(state=self.config.get("GUI", "txtHeight_state"))   # Patch Height
        self.cmbChannels.configure(state=self.config.get("GUI", "cmbChannels_state")) # Patch Channels

        # Preprocess & ROI.
        self.btnROITrainModel.configure(state=self.config.get("GUI", "btnROITrainModel_state")) # Train Model
        self.btnROILoadModel .configure(state=self.config.get("GUI", "btnROILoadModel_state"))  # Load Model
        self.btnROIFilter    .configure(state=self.config.get("GUI", "btnROIFilter_state"))     # Filter Dataset

        # Normalization.
        self.btnNormTrainModel.configure(state=self.config.get("GUI", "btnNormTrainModel_state")) # Train Model
        self.btnNormLoadModel .configure(state=self.config.get("GUI", "btnNormLoadModel_state"))  # Load Model
        self.btnNormalize     .configure(state=self.config.get("GUI", "btnNormalize_state"))      # Normalize

        # QuPath.
        self.btnQuPathParams  .configure(state=self.config.get("GUI", "btnQuPathParams_state"))   # QuPath Analysis
        self.btnQuPathAnalysis.configure(state=self.config.get("GUI", "btnQuPathAnalysis_state")) # QuPath Parameters

        # Train.
        self.btnTrainPathomics.configure(state=self.config.get("GUI", "btnTrainPathomics_state")) # Train Pathomics Models
        self.cbKaplanMeier    .configure(state=self.config.get("GUI", "cbKaplanMeier_state"))     # Kaplan-Meier checkbox
        self.cbQTL            .configure(state=self.config.get("GUI", "cbQTL_state"))             # QTL checkbox

        # Results.
        self.btnIntensity  .configure(state=self.config.get("GUI", "btnIntensity_state"))   # Intensity Distribution
        self.btnPCA        .configure(state=self.config.get("GUI", "btnPCA_state"))         # PCA Results
        self.btnKMeans     .configure(state=self.config.get("GUI", "btnKMeans_state"))      # KMeans Results
        self.btnCOX        .configure(state=self.config.get("GUI", "btnCOX_state"))         # Cox Analysis
        self.btnFeatures   .configure(state=self.config.get("GUI", "btnFeatures_state"))    # Feature Distribution Groups
        self.btnAnova      .configure(state=self.config.get("GUI", "btnAnova_state"))       # Anova Table
        self.btnKaplanMeier.configure(state=self.config.get("GUI", "btnKaplanMeier_state")) # Kaplan-Meier Graph
        self.btnQTLResults .configure(state=self.config.get("GUI", "btnQTL_state"))         # QTL Results
        self.btnGenerate   .configure(state=self.config.get("GUI", "btnGenerate_state"))    # Generate Report